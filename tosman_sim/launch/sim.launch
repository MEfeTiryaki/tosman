<?xml version="1.0" encoding="utf-8"?>

<launch>

  <!-- ROBOT SPECIFIC ARGUMENTS -->
  <!-- Robot description name -->
  <arg name="kulman_description"                  default="tosman_description"/>
  <!-- Set the name of the robot -->
  <arg name="robot_name"                          default="tosman"/>
  <!-- Set robot description path -->
  <arg name="description_file"                    default="$(find tosman_description)/urdf/tosman.urdf.xacro"/>



  <!-- GAZEBO ARGUMENTS -->
  <!-- Run Gazebo headless -->
  <arg name="gazebo_headless"                         default="false"/>
  <!-- Model path -->
  <!-- If the world is not found in a "linked" devel space layout (see catkin config), this might help: -->
  <arg name="model_path"                              default="$(find tosman_gazebo)/.."/>
  <!-- Name of the world -->
  <arg name="world"                                   default="empty"/>
  <!-- Path to the world file -->
  <arg name="world_file"                              default="$(find tosman_gazebo)/worlds/$(arg world).world"/>
  <!-- Set true to fix the robot's main body in space -->
  <arg name="fixed"                                   default="false"/>
  <!-- Set the initial pose of the robot's main body -->
  <arg name="x"                                       default="0.0"/>
  <arg name="y"                                       default="0.0"/>
  <arg name="z"                                       default="0.0"/>
  <arg name="roll"                                    default="0.0"/>
  <arg name="pitch"                                   default="0.0"/>
  <arg name="yaw"                                     default="0.0"/>
  <!-- Frame offsets -->
  <arg name="frame_odometry_offset_x"                 default="0.0"/>
  <arg name="frame_odometry_offset_y"                 default="0.0"/>
  <arg name="frame_odometry_offset_z"                 default="0.0"/>



  <!-- GUI ARGUMENTS -->
  <!-- Enable/disable Gazebo GUI -->
  <arg name="run_gazebo_gui"                          default="false"/>
  <!-- Enable/disable rviz -->
  <arg name="run_rviz"                                default="true"/>
  <!-- rviz configuration -->
  <arg name="rviz_config_path"                        default="$(find tosman_sim)/config/rviz/tosman.rviz"/>
  <!-- Path to the RViz world -->
  <arg name="rviz_world_path"                         default="$(find tosman_gazebo)/rviz/$(arg world).yaml"/>



  <!-- TF PARAMETERS -->
  <!-- tf prefix -->
  <arg name="tf_prefix"                         default=""/>
  <!-- tf minimal -->
  <arg name="tf_minimal"                                default="false"/>
  <!-- Simulation joint states publisher -->
  <arg name="simulation_joint_states_topic" default="/state_estimator/simulation_joint_states"/>
  <!-- Joint state topic name -->
  <arg name="joint_states_topic" default="/state_estimator/joint_states"/>



  <!-- CONTROLLER FRAME PARAMETERS -->
  <!-- Launch prefix for the arac controller frame -->
  <arg name="tosman_controller_frame_launch_prefix"      default=""/>
  <!-- File where the controllers to load are specified -->
  <arg name="controllers_file"          default="$(find tosman_sim)/config/controllers/controllers.yaml"/>



  <!-- PARAMETERS -->
  <!-- Set global simulation parameter -->
  <param name="/simulation" value="true"/>



  <!-- GAZEBO -->
  <include file="$(find tosman_gazebo)/launch/tosman_gazebo.launch">
    <arg name="headless"                            value="$(arg gazebo_headless)"/>
    <arg name="model_path"                          value="$(arg model_path)"/>
    <arg name="world"                               value="$(arg world)"/>
    <arg name="world_file"                          value="$(arg world_file)"/>
    <arg name="fixed"                               value="$(arg fixed)"/>
    <arg name="x"                                   value="$(arg x)"/>
    <arg name="y"                                   value="$(arg y)"/>
    <arg name="z"                                   value="$(arg z)"/>
    <arg name="roll"                                value="$(arg roll)"/>
    <arg name="pitch"                               value="$(arg pitch)"/>
    <arg name="yaw"                                 value="$(arg yaw)"/>
    <arg name="frame_odometry_offset_x"             value="$(arg frame_odometry_offset_x)"/>
    <arg name="frame_odometry_offset_y"             value="$(arg frame_odometry_offset_y)"/>
    <arg name="frame_odometry_offset_z"             value="$(arg frame_odometry_offset_z)"/>
    <arg name="run_gui"                             value="$(arg run_gazebo_gui)"/>
    <arg name="description_name"                    value="$(arg kulman_description)"/>
    <arg name="description_file"                    value="$(arg description_file)"/>
  </include>


  <!--  Joint State and TF publishers for Rviz Virtualization  -->
  <node name="tosman_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
    <param name="use_gui"           value="false"/>
    <param name="rate"              value="100"/>
    <rosparam param="source_list">["/state_estimator/simulation_joint_states"]</rosparam>
    <remap from="robot_description" to="$(arg kulman_description)"/>
    <remap from="joint_states"      to="$(arg joint_states_topic)"/>
  </node>
  <node ns="tosman_tf_publisher" name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
    <param name="publish_frequency" value="100"/>
    <param name="use_tf_static"     value="true"/>
    <param name="tf_prefix"         value="$(arg tf_prefix)"/>
    <remap from="robot_description" to="$(arg kulman_description)"/>
    <remap from="joint_states"      to="$(arg joint_states_topic)"/>
  </node>



  <!-- RVIZ -->
  <group if="$(arg run_rviz)">
    <!-- Launch node -->
    <include file="$(find arac_rviz)/launch/rviz.launch">
      <arg name="rviz_config_path" value="$(arg rviz_config_path)"/>
      <arg name="rviz_world_path"  value="$(arg rviz_world_path)"/>
      <arg name="tf_minimal"       value="$(arg tf_minimal)"/>
    </include>
  </group>



  <!-- CONTROLLER FRAME -->
    <include file="$(find tosman_controller_frame)/launch/tosman_controller_frame.launch">
      <arg name="simulation"       value="true"/>
      <arg name="launch_prefix"    value="$(arg tosman_controller_frame_launch_prefix)"/>
      <arg name="description_name" value="$(arg kulman_description)"/>
      <arg name="controllers_file" value="$(arg controllers_file)"/>
    </include>

</launch>
